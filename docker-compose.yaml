services:
  keycloak_db:
    container_name: keycloak_db
    image: postgres:14
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_user
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  keycloak:
    image: quay.io/keycloak/keycloak:21.1
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_db:5432/keycloak_db
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_password
      KC_HEALTH_ENABLED: true
      KC_HTTP_RELATIVE_PATH: /auth
      KC_HOSTNAME: localhost
      PROXY_ADDRESS_FORWARDING: true
    command: 
      - start-dev
      - --import-realm
      - --hostname-strict=false
      - --health-enabled=true
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;" ]
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - keycloak_db

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_KEYCLOAK_URL: http://localhost:8080/auth
      REACT_APP_KEYCLOAK_REALM: reports-realm
      REACT_APP_KEYCLOAK_CLIENT_ID: reports-frontend
    depends_on:
      keycloak:
        condition: service_healthy

  backend-api:
    container_name: backend-api
    build:
      context: ./backend-api
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak:8080/auth/realms/reports-realm
    depends_on:
      keycloak:
        condition: service_healthy


volumes:
  postgres_data: